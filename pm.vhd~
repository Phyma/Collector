entity pm is 
 port (clk: in std_logic;
       from_asr: in std_logic_vector(7 downto 0);
       bus: inout std_logic_vector(15 downto 0);       
   );
end pm;

architecture pm_arch of pm is

begin

type mem_t is array of (0 to 15) of std_logic_vector(7 downto 0);
constant grr : mem_t :=
        ("0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000",
         "0000000000000000");
signal mem: mem_t := grr;
process(clk)
begin
if rising_edge(clk) then
  if wea='0' then
    mem(conv_integer(addra)) <= dataina;
  end if;
  if web='0' then
    mem(conv_integer(addrb)) <= datainb;
  end if;
  datauta <= mem(conv_integer(addra));
  datautb <= mem(conv_integer(addrb));
end if;
end process; 

end pm_arch;

